# Generated by Django 5.2.3 on 2025-06-21 05:58

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_no', models.CharField(max_length=20, unique=True, verbose_name='Employee Number')),
                ('name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('age', models.IntegerField(verbose_name='Age')),
                ('doj', models.DateField(verbose_name='Date of Joining')),
                ('dol', models.DateField(blank=True, null=True, verbose_name='Date of Leaving')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employee_photos/', verbose_name='Employee Photo')),
                ('plant', models.CharField(max_length=50, verbose_name='Plant')),
                ('area_of_work', models.CharField(max_length=100, verbose_name='Area of Work')),
                ('dept', models.CharField(max_length=50, verbose_name='Department')),
                ('category', models.CharField(max_length=50, verbose_name='Category')),
                ('batch_no', models.CharField(blank=True, max_length=20, verbose_name='Batch Number')),
                ('training_days', models.IntegerField(default=0, verbose_name='Number of Training Days')),
                ('sl1_marks', models.IntegerField(blank=True, null=True, verbose_name='SL1 Marks')),
                ('sl2_marks', models.IntegerField(blank=True, null=True, verbose_name='SL2 Marks')),
                ('sl2_ojt', models.CharField(blank=True, max_length=50, verbose_name='SL2 OJT Status')),
                ('after_ojt_dept', models.CharField(blank=True, max_length=50, verbose_name='Department After OJT')),
                ('overall_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Overall Percentage')),
                ('skill_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20, verbose_name='Skill Level')),
                ('remarks', models.TextField(blank=True, verbose_name='Remarks')),
                ('sl1_status', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('pending', 'Pending')], default='pending', max_length=10, verbose_name='SL1 Status')),
                ('sl2_status', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('pending', 'Pending')], default='pending', max_length=10, verbose_name='SL2 Status')),
                ('sl3_status', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('pending', 'Pending')], default='pending', max_length=10, verbose_name='SL3 Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_no', models.IntegerField(verbose_name='Serial Number')),
                ('title', models.CharField(max_length=200, verbose_name='Module Title')),
                ('expert', models.CharField(blank=True, max_length=100, verbose_name='Expert')),
            ],
            options={
                'verbose_name': 'Training Module',
                'verbose_name_plural': 'Training Modules',
                'ordering': ['s_no'],
            },
        ),
        migrations.CreateModel(
            name='DexterityAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_1s_2s', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('test_1s_2s_ball', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('memory_test', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('mind_hand_coordination', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('nerve_stability', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('material_identification', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('pick_place_sequence', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('pick_right_material', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('visual_inspection', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('defect_identification', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('written_test', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('basic_skills_total', models.IntegerField(blank=True, null=True)),
                ('insert_loading_1', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('insert_loading_2', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('safety_test', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('painting', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('screw_assembly', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('air_cleaner_assembly', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('msa_test', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('deflashing', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('advanced_skills_total', models.IntegerField(blank=True, null=True)),
                ('overall_score', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dexterity_assessments', to='api.employee')),
            ],
            options={
                'verbose_name': 'Dexterity Assessment',
                'verbose_name_plural': 'Dexterity Assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OnJobTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_process', models.CharField(max_length=100, verbose_name='Product/Process')),
                ('machine_operations', models.CharField(max_length=100, verbose_name='Machine Operations')),
                ('quality_check_points', models.CharField(max_length=100, verbose_name='Quality Check Points')),
                ('secondary_operations', models.CharField(max_length=100, verbose_name='Secondary Operations')),
                ('handling', models.CharField(max_length=100, verbose_name='Handling')),
                ('packing_labeling', models.CharField(max_length=100, verbose_name='Packing & Labeling')),
                ('others', models.CharField(blank=True, max_length=100, verbose_name='Others')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ojt_records', to='api.employee')),
            ],
            options={
                'verbose_name': 'On Job Training',
                'verbose_name_plural': 'On Job Training Records',
            },
        ),
        migrations.CreateModel(
            name='TrainingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Training Date')),
                ('training_program', models.CharField(max_length=200, verbose_name='Training Program')),
                ('duration', models.CharField(max_length=50, verbose_name='Duration')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_records', to='api.employee')),
            ],
            options={
                'verbose_name': 'Training Record',
                'verbose_name_plural': 'Training Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('description', models.CharField(blank=True, max_length=200)),
                ('su_status', models.CharField(blank=True, max_length=10)),
                ('scope', models.CharField(blank=True, max_length=100)),
                ('operation_name', models.CharField(blank=True, max_length=100)),
                ('production', models.CharField(blank=True, max_length=50)),
                ('weight', models.CharField(blank=True, max_length=20)),
                ('quantity', models.CharField(blank=True, max_length=20)),
                ('pro_n', models.CharField(blank=True, max_length=20)),
                ('perf_n', models.CharField(blank=True, max_length=20)),
                ('final_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('supervisor_approved', models.BooleanField(default=False)),
                ('personnel_certified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='api.employee')),
            ],
            options={
                'verbose_name': 'Performance Record',
                'verbose_name_plural': 'Performance Records',
                'ordering': ['day'],
                'unique_together': {('employee', 'day')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeTrainingModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_modules', to='api.employee')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.trainingmodule')),
            ],
            options={
                'verbose_name': 'Employee Training Module',
                'verbose_name_plural': 'Employee Training Modules',
                'unique_together': {('employee', 'module')},
            },
        ),
    ]
